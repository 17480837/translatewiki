#!/bin/bash
set -u

DIRSCRIPT="`dirname \"$0\"`"
DIRSCRIPT="`( cd \"$DIRSCRIPT\" && pwd )`"
DIRLOG=/home/betawiki/logs/repo
PROJECT=$1
WIKI=/srv/mediawiki/targets/production

DIR="${2:-`pwd`}"
source $DIRSCRIPT/findexportroot
cd "$DIR"

echo "$(date --rfc-3339=seconds --utc) [$(whoami) at $DIR] $0 $@" >> $DIRLOG

checkVar() {
	if [ -z "${!1:-}" ]
		then echo "Add ${1} to REPOCONF"; exit 1
	fi
}

gitupdate() {
	"$DIRSCRIPT/update-reset-repo" "$DIR/$1" "" "${2:-master}"
}

processGroups() {
	if [ "${REPO_RW:-no}" = "no" ]
	then
		sudo -u betawiki php "$WIKI/extensions/Translate/scripts/processMessageChanges.php" --quiet --group="$1" &&
		echo "Please check https://translatewiki.net/wiki/Special:ManageMessageGroups"
	fi
}

# Ignore subrepos like Collection/OfflineContentGenerator
fetchReposFromGerrit() {
	curl -s "https://gerrit.wikimedia.org/r/projects/?p=$1" |
	grep "$1" |
	cut -d '"' -f2 |
	cut -d '/' -f3- |
	grep -v '/' |
	sort
}

CLUPDATE="$DIRSCRIPT/clupdate-git-repo";
if [ "${REPO_RW:-no}" = "yes" ]
then CLUPDATE_GERRIT="$DIRSCRIPT/clupdate-gerrit-repo";
else CLUPDATE_GERRIT="$DIRSCRIPT/clupdate-git-repo";
fi

GITUPDATEPROJECTS="\
eol \
europeana \
freecol \
fuel \
huggle \
intuition \
jquery.uls \
kiwix \
mathjax
nfcring-control \
pywikibot \
vicuna \
waymarked-trails-site \
wikiblame \
wikimania"

for i in $GITUPDATEPROJECTS; do
	if [ "$i" = "$PROJECT" ]
	then
		gitupdate "$PROJECT"
		exit 0
	fi
done

GITCLUPDATE="\
crosswatch \
entryscape \
int-orphantalk \
wikiedudashboard \
wikipedia-android \
wikipedia-ios \
WikisourceMobile \
WiktionaryMobile"

for i in $GITCLUPDATE; do
	if [ "$i" = "$PROJECT" ]
	then
		VAR="${PROJECT^^}"
		VAR="${VAR//-}"
		VAR="REPO_$VAR"
		checkVar "$VAR"
		"$CLUPDATE" "${!VAR}" "$DIR/$PROJECT"
		exit 0
	fi
done

if [ "$PROJECT" = "blockly" ]
then
	gitupdate "$PROJECT"
	gitupdate "blockly-games"

elif [ "$PROJECT" = "etherpad-lite" ]
then
	gitupdate "$PROJECT" $REPO_ETHERPADLITE_BRANCH

elif [ "$PROJECT" = "fudforum" ]
then
	svn up -q $PROJECT

elif [ "$PROJECT" = "ihris" ]
then
	cd $PROJECT
	for MODULE in $REPO_IHRIS_MODULES
	do
		cd $MODULE
		bzr pull -q
		cd ..
	done

elif [ "$PROJECT" = "inaturalist" ]
then
	gitupdate "$PROJECT" i18n

elif [ "$PROJECT" = "mantis" ]
then
	gitupdate "$PROJECT" $REPO_MANTIS_BRANCH

elif [ "$PROJECT" = "mifos" ]
then
	gitupdate "$PROJECT" develop

elif [ "$PROJECT" = "mediawiki" ]
then
	if [ -z "$REPO_MEDIAWIKI_BRANCHES" ]
	then echo "Add REPO_MEDIAWIKI_BRANCHES to REPOCONF"; exit 1
	fi

	echo "$REPO_MEDIAWIKI_BRANCHES" | tr ' ' '\n' |
		xargs -P4 -I___ "$CLUPDATE_GERRIT" "$REPO_MEDIAWIKI" "$DIR/$PROJECT/___" "___"

elif [ "$PROJECT" = "mediawiki-extensions" ]
then
	if [ -z "$REPO_MWEXTGIT" ]
	then echo "Add REPO_MWEXTGIT to REPOCONF"; exit 1
	fi

	echo "$(fetchReposFromGerrit mediawiki/extensions/)" |
		xargs -P4 -I___ "$CLUPDATE_GERRIT" "$REPO_MWEXTGIT/___.git" "$DIR/$PROJECT/extensions/___"

	REPOPREFIX="${REPO_MWEXTGIT%/mediawiki/extensions}"
	"$CLUPDATE_GERRIT" "$REPOPREFIX/oojs/ui.git" "$DIR/$PROJECT/extensions/oojs-ui"
	"$CLUPDATE_GERRIT" "$REPOPREFIX/VisualEditor/VisualEditor.git" "$DIR/$PROJECT/extensions/VisualEditorVisualEditor"

	processGroups "ext-*"

elif [ "$PROJECT" = "mediawiki-skins" ]
then
	if [ -z "$REPO_MWSKINGIT" ]
	then echo "Add REPO_MWSKINGIT to REPOCONF"; exit 1
	fi

	echo "$(fetchReposFromGerrit mediawiki/skins/)" |
		xargs -P4 -I___ "$CLUPDATE_GERRIT" "$REPO_MWSKINGIT/___.git" "$DIR/$PROJECT/___"

	processGroups "mediawiki-skin-*"

elif [ "$PROJECT" = "nocc" ]
then
	svn up -q $PROJECT

elif [ "$PROJECT" = "openimages" ]
then
	svn up -q $PROJECT

elif [ "$PROJECT" = "osm" ]
then
	gitupdate "$PROJECT"
	gitupdate "potlatch2"

else
	echo "`basename $0`: Unknown project"
	exit 1
fi
