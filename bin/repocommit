#!/bin/bash
set -e

DIRSCRIPT="`dirname \"$0\"`"
DIRSCRIPT="`( cd \"$DIRSCRIPT\" && pwd )`"
DIRLOG=/home/betawiki/logs/repo

PROJECT=$1
DIR=$2
: ${DIR:=`pwd`}
source ${DIRSCRIPT}/findexportroot
cd "$DIR"

echo "$(date --rfc-3339=seconds --utc) [$(whoami) at $DIR] $0 $@" >> ${DIRLOG}

COMMITMSG="Localisation updates from http://translatewiki.net."

gitcommit() {
	local dir=$1
	cd "$dir"
	git add .
	git commit -v -e -m "$COMMITMSG"
	git push
	cd ..
}

gitcommitNoCheck() {
	local dir=$1
	cd "$dir"
	git add .
	git commit -m "$COMMITMSG"
	git push
	cd ..
}

mergeL10n-bot() {
	for i in `ssh l10n-bot@gerrit.wikimedia.org -p 29418 gerrit query --format=TEXT owner:l10n-bot status:open |grep "  url:" |cut -d/ -f5`
	do
		echo "Merging ${i}..."
		ssh l10n-bot@gerrit.wikimedia.org -p 29418 gerrit review $i,1 --code-review 2 --verified 2 --submit
	done
}

GITCOMMITNOCHECKPROJECTS="\
eol \
etherpad-lite \
freecol \
fuel \
intuition \
jquery.uls \
kiwix \
mantis \
mathjax \
mifos \
pywikibot \
shapado \
vicuna \
waymarked-trails-site \
wikia \
WikipediaMobile \
WikipediaMobileJ2ME \
wikireader \
WikisourceMobile \
WiktionaryMobile \
WLMMobile"

for i in $GITCOMMITNOCHECKPROJECTS; do
	if [ "$i" = "$PROJECT" ]
	then
		gitcommitNoCheck "$PROJECT"

		if [ "$PROJECT" = "pywikibot" ]
		then
			mergeL10n-bot
		fi

		exit 0
	fi
done

# This needs more work.
if [ "$PROJECT" = "blockly" ]
then
	cd $PROJECT
	for i in `find . -name *.json`
	do
		svn add -q $i
		svn propset -q svn:mime-type text/plain $i
	done
	svn commit --message "$COMMITMSG"
	cd ..

elif [ "$PROJECT" = "commons-android" ]
then
	cd $PROJECT
	git add .
	git commit -a -m "$COMMITMSG" && git fetch gerrit && git review -t l10n || :
	cd ..

elif [ "$PROJECT" = "commons-ios" ]
then
	cd $PROJECT
	git add .
	git commit -a -m "$COMMITMSG" && git fetch gerrit && git review -t l10n || :
	cd ..

elif [ "$PROJECT" = "fudforum" ]
then
	cd $PROJECT
	for i in `find . -name msg`
	do
		svn add -q $i
		svn propset -q svn:mime-type text/plain $i
		svn propset -q svn:eol-style native $i
	done
	svn commit --message "$COMMITMSG"
	cd ..

elif [ "$PROJECT" = "ihris" ]
then
	cd $PROJECT
	for MODULE in $REPO_IHRIS_MODULES
	do
		cd $MODULE
		bzr add .
		bzr commit -m "$COMMITMSG"
		cd ..
	done

elif [ "$PROJECT" = "mediawiki" ]
then
	if [ -z "$REPO_MEDIAWIKI_BRANCHES" ]
	then echo "Add REPO_MEDIAWIKI_BRANCHES to REPOCONF"; exit 1
	fi

	cd $PROJECT
	for BRANCH in $REPO_MEDIAWIKI_BRANCHES
	do
		cd "$BRANCH"
		git commit -a -m "$COMMITMSG" && git fetch gerrit && git review -t l10n || :
		cd ..
	done
	cd ..

elif [ "$PROJECT" = "mediawiki-extensions" ]
then
	cd $PROJECT/extensions
	for i in `ls |grep -v Installer`
	do
		cd $i
		git add .
		git commit -m "$COMMITMSG" && git fetch gerrit && git review -t l10n || :
		cd ..
	done

	cd ../..

	mergeL10n-bot

elif [ "$PROJECT" = "mwlib" ]
then
	gitcommitNoCheck "$PROJECT.rl"

elif [ "$PROJECT" = "okawix" ]
then
	cd $PROJECT
	svn add -q --force *
	for i in `find . -name *.dtd -o -name *.properties`
	do
		svn propset -q svn:mime-type text/plain $i
		svn propset -q svn:eol-style native $i
	done
	svn commit --message "$COMMITMSG"
	cd ..

elif [ "$PROJECT" = "openimages" ]
then
	cd $PROJECT
	svn add -q *.properties
	svn propset -q svn:mime-type text/plain *.properties
	svn propset -q svn:eol-style native *.properties
	svn commit --message "$COMMITMSG"
	cd ..

elif [ "$PROJECT" = "osm" ]
then
	gitcommitNoCheck $PROJECT
	gitcommitNoCheck potlatch2

elif [ "$PROJECT" = "wikiblame" ]
then
	cd $PROJECT
	svn add -q *.php
	svn propset -q svn:eol-style native *.php
	svn commit --message "$COMMITMSG"
	cd ..

else
	echo "`basename $0`: Unknown project"
	exit 1
fi
